(deffunction meas-group (?p ?gr)
                    (if (eq (str-compare (sub-string 1 1 ?p) A) 0) then (return FALSE))
                    (bind ?pos (str-index " " ?p))
                    (bind ?str (sub-string 1 (- ?pos 1) ?p))
                    (bind ?meas-1 (nth$ 1 (get-meas-group ?str)))
                    (bind ?meas-2 (nth$ 2 (get-meas-group ?str)))
                    (bind ?meas-3 (nth$ 3 (get-meas-group ?str)))
                    (bind ?gr-1 (nth$ 1 (get-meas-group ?gr)))
                    (bind ?gr-2 (nth$ 2 (get-meas-group ?gr)))
                    (bind ?gr-3 (nth$ 3 (get-meas-group ?gr)))
                    (if (and (neq (str-compare ?gr-1 ?meas-1) 0) (neq (str-compare ?gr-1 0) 0)) then (return FALSE))
                    (if (and (neq (str-compare ?gr-2 ?meas-2) 0) (neq (str-compare ?gr-2 0) 0)) then (return FALSE))
                    (if (and (neq (str-compare ?gr-3 ?meas-3) 0) (neq (str-compare ?gr-3 0) 0)) then (return FALSE))
                     (return TRUE))