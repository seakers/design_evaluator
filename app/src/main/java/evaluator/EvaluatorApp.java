/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package evaluator;

import jess.Userfunction;
import vassar.GlobalScope;
import vassar.VassarClient;
import vassar.database.DatabaseClient;
import vassar.database.service.DebugAPI;
import vassar.database.service.QueryAPI;
import vassar.jess.Resource;
import vassar.jess.Requests;
import vassar.jess.func.Improve;
import vassar.jess.func.SameOrBetter;
import vassar.jess.func.Worsen;
import sqs.Consumer;
import software.amazon.awssdk.services.sqs.SqsClient;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.auth.credentials.EnvironmentVariableCredentialsProvider;

import java.net.URI;
import java.util.ArrayList;
import java.util.HashMap;

public class EvaluatorApp {

    public static void main(String[] args) {
        System.out.println("os.name: "+System.getProperty("orekit.coveragedatabase"));



//       __  .__   __.  __  .___________.
//      |  | |  \ |  | |  | |           |
//      |  | |   \|  | |  | `---|  |----`
//      |  | |  . `  | |  |     |  |
//      |  | |  |\   | |  |     |  |
//      |__| |__| \__| |__|     |__|

        GlobalScope.measurementsToSubobjectives = new HashMap<>();
        GlobalScope.subobjectivesToMeasurements = new HashMap<>();



        String jessAppFuncPath    = "/home/gabe/repos/seakers/design_evaluator/app/ptypes/functions";
        String outputFilePath     = "/home/gabe/repos/seakers/design_evaluator/app/logs/dbOutput.json";
        String outputPath         = "/home/gabe/repos/seakers/design_evaluator/app/src/main/java/vassar/database/template/output";
        String graphqlEndpoint    = "http://localhost:6001/v1/graphql";
        String localstackEndpoint = "http://localhost:4576";
        String apollo_url         = "http://localhost:6001/v1/graphql";
        boolean debug             = true;

        int group_id   = 1;
        int problem_id = 4;

        ArrayList<Userfunction> userFuncs = new ArrayList<>() {{
            add( new SameOrBetter() );
            add( new Improve() );
            add( new Worsen() );
        }};

        ArrayList<String> batchFuncs = new ArrayList<>() {{
            add("/home/gabe/repos/seakers/design_evaluator/app/ptypes/functions/update-objective-variable.clp");
            add("/home/gabe/repos/seakers/design_evaluator/app/ptypes/functions/ContainsRegion.clp");
            add("/home/gabe/repos/seakers/design_evaluator/app/ptypes/functions/ContainsBands.clp");
        }};


        // -----> JESS REQUESTS <-----
        String jessGlobalTempPath = "/home/gabe/repos/seakers/design_evaluator/app/src/main/java/vassar/database/template/defs";
        String jessGlobalFuncPath = "/home/gabe/repos/seakers/design_evaluator/app/ptypes/functions";
        String jessAppPath        = "/home/gabe/repos/seakers/design_evaluator/app/problems/smap/clp";
        String requestMode        = "CRISP-ATTRIBUTES";
        Requests requests = new Requests.Builder()
                                        .setGlobalTemplatePath(jessGlobalTempPath)
                                        .setGlobalFunctionPath(jessGlobalFuncPath)
                                        .setFunctionTemplates()
                                        .setRequestMode(requestMode)
                                        .setJessAppPath(jessAppPath)
                                        .build();





//      .______    __    __   __   __       _______
//      |   _  \  |  |  |  | |  | |  |     |       \
//      |  |_)  | |  |  |  | |  | |  |     |  .--.  |
//      |   _  <  |  |  |  | |  | |  |     |  |  |  |
//      |  |_)  | |  `--'  | |  | |  `----.|  '--'  |
//      |______/   \______/  |__| |_______||_______/


        QueryAPI queryAPI = new QueryAPI.Builder(apollo_url)
                                        .groupID(group_id)
                                        .problemID(problem_id)
                                        .build();

        DebugAPI debugAPI = new DebugAPI.Builder(outputFilePath)
                                        .newFile()
                                        .setOutputPath(outputPath)
                                        .build();

        DatabaseClient dbClient = new DatabaseClient.Builder()
                                        .debug(debug)
                                        .queryClient(queryAPI)
                                        .debugClient(debugAPI)
                                        .build();


        Resource engine = new Resource.Builder(dbClient)
                                        .addUserFunctionBatch(userFuncs)      // - Improve(), SameOrBetter(), Worsen()
                                        .setRequests(requests.getRequests()) // - eval: template requests (+ functions)
                                        .setRequestMode(requestMode)
                                        .build();



        VassarClient vClient = new VassarClient.Builder()
                                        .setEngine(engine)
                                        .build();







        SqsClient sqsClient = SqsClient.builder()
                                        .region(Region.US_EAST_2)
                                        .endpointOverride(URI.create(localstackEndpoint))
                                        .credentialsProvider(EnvironmentVariableCredentialsProvider.create())
                                        .build();




        Consumer evaluator = new Consumer.Builder(sqsClient)
                                         .setVassarClient(vClient)
                                         .debug(debug)
                                         .build();

        // RUN CONSUMER
        Thread cThread = new Thread(evaluator);
        cThread.start();





    }
}
