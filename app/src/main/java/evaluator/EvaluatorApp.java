/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package evaluator;

import evaluator.database.DatabaseClient;
import evaluator.database.service.DebugAPI;
import evaluator.database.service.QueryAPI;
import evaluator.sqs.Consumer;
import software.amazon.awssdk.services.sqs.SqsClient;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.auth.credentials.EnvironmentVariableCredentialsProvider;

import java.net.URI;

public class EvaluatorApp {

    public static void main(String[] args) {

        // EXECUTION VARS
        String outputFilePath     = "/home/gabe/repos/seakers/design_evaluator/app/logs/dbOutput.json";
        String graphqlEndpoint    = "http://localhost:6001/v1/graphql";
        String localstackEndpoint = "http://localhost:4576";
        String apollo_url         = "http://localhost:6001/v1/graphql";
        boolean debug             = true;

        int group_id   = 1;
        int problem_id = 1;

        // BUILD CLIENT API
        QueryAPI queryAPI = new QueryAPI.Builder(apollo_url)
                                                 .groupID(group_id)
                                                 .problemID(problem_id)
                                                 .build();

        // BUILD CLIENT API
        DebugAPI debugAPI = new DebugAPI.Builder(outputFilePath)
                                                 .newFile()
                                                 .build();

        // BUILD DATABASE CLIENT
        DatabaseClient dbClient = new DatabaseClient.Builder()
                                              .debug(debug)
                                              .queryClient(queryAPI)
                                              .debugClient(debugAPI)
                                              .build();

        // BUILD SQS CLIENT
        SqsClient sqsClient = SqsClient.builder()
                                        .region(Region.US_EAST_2)
                                        .endpointOverride(URI.create(localstackEndpoint))
                                        .credentialsProvider(EnvironmentVariableCredentialsProvider.create())
                                        .build();

        // BUILD CONSUMER
        Consumer evaluator = new Consumer.Builder(sqsClient)
                                         .setDatabaseClient(dbClient)
                                         .debug(debug)
                                         .build();

        // RUN CONSUMER
        Thread cThread = new Thread(evaluator);
        cThread.start();





    }
}
