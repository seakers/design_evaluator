# INSTANTIATIONS


query OrbitInformation($problem_id: Int!) {
    items: Orbit(where: {Join__Orbit_Attributes: {problem_id: {_eq: $problem_id}}, name: {_in: ["LEO-600-polar-NA", "SSO-600-SSO-AM", "SSO-600-SSO-DD", "SSO-800-SSO-AM", "SSO-800-SSO-DD"]}}) {
        id
        name
        attributes: Join__Orbit_Attributes(where: {problem_id: {_eq: $problem_id}}) {
            id
            value
            attribute: Orbit_Attribute {
                name
            }
        }
    }
}













query LaunchVehicleInformation($group_id: Int, $problem_id: Int!) {
    items: Launch_Vehicle(where: {Group: {id: {_eq: $group_id}}}) {
        id
        name
        attributes: Join__Launch_Vehicle_Attributes(where: {problem_id: {_eq: $problem_id}}) {
            value
            attribute: Launch_Vehicle_Attribute {
                name
            }
        }
    }
}













# ATTRIBUTES

query MeasurementAttribute($group_id: Int!) {
    items: Measurement_Attribute(where: {Group: {id: {_eq: $group_id}}}) {
        id
        name
        slot_type
        type
    }
}

query InstrumentAttribute($group_id: Int) {
    items: Instrument_Attribute(where: {Group: {id: {_eq: $group_id}}}) {
        id
        name
        slot_type
        type
    }
}




query Instrument($problem_id: Int) {
    items: Instrument(where: {Join__Problem_Instruments: {problem_id: {_eq: $problem_id}}}) {
        id
        name
        attributes: Join__Instrument_Characteristics {
            Instrument_Attribute {
                id
                name
            }
            value
        }
    }
}






query OrbitAttribute($group_id: Int) {
    items: Orbit_Attribute(where: {Group: {id: {_eq: $group_id}}}) {
        id
        name
        slot_type
        type
    }
}

query LaunchVehicleAttribute($group_id: Int) {
    items: Launch_Vehicle_Attribute(where: {Group: {id: {_eq: $group_id}}}) {
        id
        name
        slot_type
        type
    }
}

query MissionAttribute($problem_id: Int) {
    items: Mission_Attribute(where: {Problem: {id: {_eq: $problem_id}}}) {
        id
        name
        slot_type
        type
    }
}


query AttributeInheritance($problem_id: Int) {
    items: Inheritence_Attribute(where: {Problem: {id: {_eq: $problem_id}}}) {
        template1
        copySlotType1
        copySlotName1
        matchingSlotType1
        matchingSlotName1
        template2
        matchingSlotName2
        copySlotName2
        module
        id
    }
}





query FuzzyAttribute($problem_id: Int) {
    items: Fuzzy_Attribute(where: {Problem: {id: {_eq: $problem_id}}}) {
        id
        name
        parameter
        unit
        values: Fuzzy_Values {
            id
            value
            minimum
            mean
            maximum
        }
    }
}



query AggregationRule($problem_id: Int) {
    items: Stakeholder_Needs_Panel(where: {problem_id: {_eq: $problem_id}}) {
        name
        index_id
        weight
        description
        objectives: Stakeholder_Needs_Objectives {
            name
            weight
            description
            subobjectives: Stakeholder_Needs_Subobjectives {
                name
                description
                weight
            }
        }
    }
}



query RequirementRuleCase($problem_id: Int) {
    items: Requirement_Rule_Case(where: {problem_id: {_eq: $problem_id}}) {
        id
        measurement_attribute_id
        measurement_id
        problem_id
        rule
        subobjective_id
        value
    }
}



query RequirementRuleAttribute($problem_id: Int) {
    items: Requirement_Rule_Attribute(where: {problem_id: {_eq: $problem_id}}) {
        id
        justification
        scores
        thresholds
        type
        measurement: Measurement {
            name
        }
        measurement_attribute: Measurement_Attribute {
            name
        }
        problem: Problem {
            id
            name
        }
        objective: Stakeholder_Needs_Subobjective {
            id
            name
        }
    }
}


query CapabilityRule($group_id: Int!, $problem_id: Int!) {
    items: Join__Instrument_Capability(where: {problem_id: {_eq: $problem_id}, group_id: {_eq: $group_id}, Instrument: {name: {_in: ["BIOMASS", "VIIRS", "SMAP_MWR", "SMAP_RAD", "CMIS"]}}}) {
        instrument: Instrument {
            name
        }
        measurement: Measurement {
            name
        }
        measurement_attribute: Measurement_Attribute {
            name
        }
        measurement_attribute_value: value
    }
}




query EnabledInstruments($problem_id: Int!){
    items: Join__Problem_Instrument(where: {problem_id: {_eq: $problem_id}}) {
        instrument: Instrument {
            name
        }
    }
}


























